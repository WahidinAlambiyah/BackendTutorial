package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TrxDeliveryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxDeliveryAllPropertiesEquals(TrxDelivery expected, TrxDelivery actual) {
        assertTrxDeliveryAutoGeneratedPropertiesEquals(expected, actual);
        assertTrxDeliveryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxDeliveryAllUpdatablePropertiesEquals(TrxDelivery expected, TrxDelivery actual) {
        assertTrxDeliveryUpdatableFieldsEquals(expected, actual);
        assertTrxDeliveryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxDeliveryAutoGeneratedPropertiesEquals(TrxDelivery expected, TrxDelivery actual) {
        assertThat(expected)
            .as("Verify TrxDelivery auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxDeliveryUpdatableFieldsEquals(TrxDelivery expected, TrxDelivery actual) {
        assertThat(expected)
            .as("Verify TrxDelivery relevant properties")
            .satisfies(e -> assertThat(e.getDeliveryAddress()).as("check deliveryAddress").isEqualTo(actual.getDeliveryAddress()))
            .satisfies(e -> assertThat(e.getDeliveryStatus()).as("check deliveryStatus").isEqualTo(actual.getDeliveryStatus()))
            .satisfies(e -> assertThat(e.getAssignedDriver()).as("check assignedDriver").isEqualTo(actual.getAssignedDriver()))
            .satisfies(
                e -> assertThat(e.getEstimatedDeliveryTime()).as("check estimatedDeliveryTime").isEqualTo(actual.getEstimatedDeliveryTime())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxDeliveryUpdatableRelationshipsEquals(TrxDelivery expected, TrxDelivery actual) {
        assertThat(expected)
            .as("Verify TrxDelivery relationships")
            .satisfies(e -> assertThat(e.getDriver()).as("check driver").isEqualTo(actual.getDriver()))
            .satisfies(e -> assertThat(e.getTrxOrder()).as("check trxOrder").isEqualTo(actual.getTrxOrder()));
    }
}
