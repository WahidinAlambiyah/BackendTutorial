package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MstJobAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstJobAllPropertiesEquals(MstJob expected, MstJob actual) {
        assertMstJobAutoGeneratedPropertiesEquals(expected, actual);
        assertMstJobAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstJobAllUpdatablePropertiesEquals(MstJob expected, MstJob actual) {
        assertMstJobUpdatableFieldsEquals(expected, actual);
        assertMstJobUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstJobAutoGeneratedPropertiesEquals(MstJob expected, MstJob actual) {
        assertThat(expected)
            .as("Verify MstJob auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstJobUpdatableFieldsEquals(MstJob expected, MstJob actual) {
        assertThat(expected)
            .as("Verify MstJob relevant properties")
            .satisfies(e -> assertThat(e.getJobTitle()).as("check jobTitle").isEqualTo(actual.getJobTitle()))
            .satisfies(e -> assertThat(e.getMinSalary()).as("check minSalary").isEqualTo(actual.getMinSalary()))
            .satisfies(e -> assertThat(e.getMaxSalary()).as("check maxSalary").isEqualTo(actual.getMaxSalary()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstJobUpdatableRelationshipsEquals(MstJob expected, MstJob actual) {
        assertThat(expected)
            .as("Verify MstJob relationships")
            .satisfies(e -> assertThat(e.getTasks()).as("check tasks").isEqualTo(actual.getTasks()))
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
