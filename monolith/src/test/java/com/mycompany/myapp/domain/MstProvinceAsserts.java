package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MstProvinceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstProvinceAllPropertiesEquals(MstProvince expected, MstProvince actual) {
        assertMstProvinceAutoGeneratedPropertiesEquals(expected, actual);
        assertMstProvinceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstProvinceAllUpdatablePropertiesEquals(MstProvince expected, MstProvince actual) {
        assertMstProvinceUpdatableFieldsEquals(expected, actual);
        assertMstProvinceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstProvinceAutoGeneratedPropertiesEquals(MstProvince expected, MstProvince actual) {
        assertThat(expected)
            .as("Verify MstProvince auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstProvinceUpdatableFieldsEquals(MstProvince expected, MstProvince actual) {
        assertThat(expected)
            .as("Verify MstProvince relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUnm49Code()).as("check unm49Code").isEqualTo(actual.getUnm49Code()))
            .satisfies(e -> assertThat(e.getIsoAlpha2Code()).as("check isoAlpha2Code").isEqualTo(actual.getIsoAlpha2Code()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstProvinceUpdatableRelationshipsEquals(MstProvince expected, MstProvince actual) {
        assertThat(expected)
            .as("Verify MstProvince relationships")
            .satisfies(e -> assertThat(e.getCountry()).as("check country").isEqualTo(actual.getCountry()));
    }
}
