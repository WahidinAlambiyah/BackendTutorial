package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MstCustomerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstCustomerAllPropertiesEquals(MstCustomer expected, MstCustomer actual) {
        assertMstCustomerAutoGeneratedPropertiesEquals(expected, actual);
        assertMstCustomerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstCustomerAllUpdatablePropertiesEquals(MstCustomer expected, MstCustomer actual) {
        assertMstCustomerUpdatableFieldsEquals(expected, actual);
        assertMstCustomerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstCustomerAutoGeneratedPropertiesEquals(MstCustomer expected, MstCustomer actual) {
        assertThat(expected)
            .as("Verify MstCustomer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstCustomerUpdatableFieldsEquals(MstCustomer expected, MstCustomer actual) {
        assertThat(expected)
            .as("Verify MstCustomer relevant properties")
            .satisfies(e -> assertThat(e.getFirstName()).as("check firstName").isEqualTo(actual.getFirstName()))
            .satisfies(e -> assertThat(e.getLastName()).as("check lastName").isEqualTo(actual.getLastName()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getPhoneNumber()).as("check phoneNumber").isEqualTo(actual.getPhoneNumber()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()))
            .satisfies(e -> assertThat(e.getLoyaltyPoints()).as("check loyaltyPoints").isEqualTo(actual.getLoyaltyPoints()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstCustomerUpdatableRelationshipsEquals(MstCustomer expected, MstCustomer actual) {}
}
