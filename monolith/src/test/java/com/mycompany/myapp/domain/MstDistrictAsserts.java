package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MstDistrictAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstDistrictAllPropertiesEquals(MstDistrict expected, MstDistrict actual) {
        assertMstDistrictAutoGeneratedPropertiesEquals(expected, actual);
        assertMstDistrictAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstDistrictAllUpdatablePropertiesEquals(MstDistrict expected, MstDistrict actual) {
        assertMstDistrictUpdatableFieldsEquals(expected, actual);
        assertMstDistrictUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstDistrictAutoGeneratedPropertiesEquals(MstDistrict expected, MstDistrict actual) {
        assertThat(expected)
            .as("Verify MstDistrict auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstDistrictUpdatableFieldsEquals(MstDistrict expected, MstDistrict actual) {
        assertThat(expected)
            .as("Verify MstDistrict relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUnm49Code()).as("check unm49Code").isEqualTo(actual.getUnm49Code()))
            .satisfies(e -> assertThat(e.getIsoAlpha2Code()).as("check isoAlpha2Code").isEqualTo(actual.getIsoAlpha2Code()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstDistrictUpdatableRelationshipsEquals(MstDistrict expected, MstDistrict actual) {
        assertThat(expected)
            .as("Verify MstDistrict relationships")
            .satisfies(e -> assertThat(e.getCity()).as("check city").isEqualTo(actual.getCity()));
    }
}
