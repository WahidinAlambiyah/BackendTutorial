package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TrxStockAlertAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxStockAlertAllPropertiesEquals(TrxStockAlert expected, TrxStockAlert actual) {
        assertTrxStockAlertAutoGeneratedPropertiesEquals(expected, actual);
        assertTrxStockAlertAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxStockAlertAllUpdatablePropertiesEquals(TrxStockAlert expected, TrxStockAlert actual) {
        assertTrxStockAlertUpdatableFieldsEquals(expected, actual);
        assertTrxStockAlertUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxStockAlertAutoGeneratedPropertiesEquals(TrxStockAlert expected, TrxStockAlert actual) {
        assertThat(expected)
            .as("Verify TrxStockAlert auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxStockAlertUpdatableFieldsEquals(TrxStockAlert expected, TrxStockAlert actual) {
        assertThat(expected)
            .as("Verify TrxStockAlert relevant properties")
            .satisfies(e -> assertThat(e.getAlertThreshold()).as("check alertThreshold").isEqualTo(actual.getAlertThreshold()))
            .satisfies(e -> assertThat(e.getCurrentStock()).as("check currentStock").isEqualTo(actual.getCurrentStock()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrxStockAlertUpdatableRelationshipsEquals(TrxStockAlert expected, TrxStockAlert actual) {}
}
