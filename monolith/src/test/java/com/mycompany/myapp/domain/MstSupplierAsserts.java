package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MstSupplierAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstSupplierAllPropertiesEquals(MstSupplier expected, MstSupplier actual) {
        assertMstSupplierAutoGeneratedPropertiesEquals(expected, actual);
        assertMstSupplierAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstSupplierAllUpdatablePropertiesEquals(MstSupplier expected, MstSupplier actual) {
        assertMstSupplierUpdatableFieldsEquals(expected, actual);
        assertMstSupplierUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstSupplierAutoGeneratedPropertiesEquals(MstSupplier expected, MstSupplier actual) {
        assertThat(expected)
            .as("Verify MstSupplier auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstSupplierUpdatableFieldsEquals(MstSupplier expected, MstSupplier actual) {
        assertThat(expected)
            .as("Verify MstSupplier relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getContactInfo()).as("check contactInfo").isEqualTo(actual.getContactInfo()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()))
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMstSupplierUpdatableRelationshipsEquals(MstSupplier expected, MstSupplier actual) {}
}
