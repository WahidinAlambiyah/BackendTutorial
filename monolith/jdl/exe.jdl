// ===============================
// Event Management Models
// ===============================

entity TrxEvent {
    title String required,
    description TextBlob,
    date Instant required,
    location String,
    capacity Integer,
    price BigDecimal,
    status EventStatus
}

enum EventStatus {
    UPCOMING,
    ONGOING,
    COMPLETED,
    CANCELLED
}

entity TrxTournament {
    name String required,
    type TournamentType,
    prizeAmount BigDecimal,
    startDate Instant required,
    endDate Instant required,
    location String,
    maxParticipants Integer,
    status TournamentStatus
}

enum TournamentType {
    TEAM,
    SOLO
}

enum TournamentStatus {
    UPCOMING,
    IN_PROGRESS,
    FINISHED,
    CANCELLED
}

relationship OneToMany {
    TrxEvent{tournament} to TrxTournament{event(title)}
}

entity MstService {
    name String required,
    description TextBlob,
    price BigDecimal,
    durationInHours Integer,
    serviceType ServiceType
}

enum ServiceType {
    EVENT_MANAGEMENT,
    TICKETING,
    SPONSORSHIP,
    MARKETING
}

relationship ManyToOne {
    TrxEvent{service} to MstService{event}
}

entity TrxTestimonial {
    name String required,
    feedback TextBlob required,
    rating Integer required min(1) max(5),
    date Instant required
}

relationship ManyToOne {
    TrxEvent{testimonial} to TrxTestimonial{event},
    MstService{testimonial} to TrxTestimonial{service}
}


// ===============================
// Region Management Models
// ===============================

entity MstRegion {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstCountry {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstProvince {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstCity {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstDistrict {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstSubDistrict {
    name String required,
    unm49Code String unique,
    isoAlpha2Code String unique
}

entity MstPostalCode {
    code String required unique
}

relationship OneToMany {
    MstRegion{country} to MstCountry{region(name)},
    MstCountry{province} to MstProvince{country(name)},
    MstProvince{city} to MstCity{province(name)},
    MstCity{district} to MstDistrict{city(name)},
    MstDistrict{subDistrict} to MstSubDistrict{district(name)},
    MstSubDistrict{postalCode} to MstPostalCode{SubDistrict(name)}
}

// ===============================
// Employee User Management Models
// ===============================

entity Location {
    streetAddress String,
    postalCode String,
    city String,
    stateProvince String
}

entity MstDepartment {
    departmentName String required
}

entity MstTask {
    title String,
    description String
}

entity MstEmployee {
    firstName String,
    lastName String,
    email String,
    phoneNumber String,
    hireDate Instant,
    salary Long,
    commissionPct Long
}

entity MstJob {
    jobTitle String,
    minSalary Long,
    maxSalary Long
}

entity JobHistory {
    startDate Instant,
    endDate Instant,
    language Language
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToOne {
    MstDepartment{location} to Location
}

relationship ManyToMany {
    MstJob{task(title)} to MstTask{job}
}

relationship OneToMany {
    MstEmployee to MstJob{employee},
    MstDepartment to MstEmployee{department}
}

relationship ManyToOne {
    MstEmployee{manager} to MstEmployee
}

relationship OneToOne {
    JobHistory{job} to MstJob,
    JobHistory{department} to MstDepartment,
    JobHistory{employee} to MstEmployee
}

// ===============================
// Product Management Models
// ===============================

entity MstProduct {
    name String required,
    description String,
    price BigDecimal required,
    quantity Integer required,
    barcode String unique,
    unitSize String
}

entity MstCategory {
    name String required,
    description String
}

entity MstBrand {
    name String required,
    logo String,
    description String
}

entity MstSupplier {
    name String required,
    contactInfo String,
    address String,
    rating Integer min(1) max(5)
}

// ===============================
// Inventory Management Models
// ===============================

entity Stock {
    quantityAvailable Integer required,
    reorderLevel Integer,
    expiryDate Instant
}

entity TrxOrderStock {
    quantityOrdered Integer required,
    orderDate Instant required,
    expectedArrivalDate Instant
}

// ===============================
// Sales and Order Models
// ===============================

entity TrxCart {
    totalPrice BigDecimal required
}

entity TrxOrder {
    orderDate Instant required,
    deliveryDate Instant,
    orderStatus OrderStatus required,
    paymentMethod PaymentMethod required,
    totalAmount BigDecimal required
}

entity TrxOrderItem {
    quantity Integer required,
    price BigDecimal required
}

enum OrderStatus {
    PENDING,
    COMPLETED,
    CANCELLED
}

enum PaymentMethod {
    CASH,
    CARD,
    ONLINE
}

// ===============================
// Customer Management Models
// ===============================

entity MstCustomer {
    firstName String required,
    lastName String required,
    email String required,
    phoneNumber String,
    address String,
    loyaltyPoints Integer
}

entity MstLoyaltyProgram {
    pointsEarned Integer,
    membershipTier String
}

// ===============================
// Delivery and Logistics Models
// ===============================

entity TrxDelivery {
    deliveryAddress String required,
    deliveryStatus DeliveryStatus required,
    assignedDriver String,
    estimatedDeliveryTime Instant
}

enum DeliveryStatus {
    PENDING,
    OUT_FOR_DELIVERY,
    DELIVERED
}

entity MstDriver {
    name String required,
    contactNumber String,
    vehicleDetails String
}

// ===============================
// Audit and History Models
// ===============================

entity TrxOrderHistory {
    previousStatus OrderStatus required,
    newStatus OrderStatus required,
    changeDate Instant required
}

entity TrxProductHistory {
    oldPrice BigDecimal,
    newPrice BigDecimal,
    changeDate Instant required
}

// ===============================
// Discount and Promotion Models
// ===============================

entity TrxDiscount {
    discountPercentage Float required,
    startDate Instant required,
    endDate Instant required
}

entity TrxCoupon {
    code String required unique,
    discountAmount BigDecimal required,
    validUntil Instant required,
    minPurchase BigDecimal
}

// ===============================
// Notifications and Alerts Models
// ===============================

entity TrxNotification {
    recipient String required,
    messageType String required,
    content String required,
    sentAt Instant required
}

entity TrxStockAlert {
    alertThreshold Integer required,
    currentStock Integer required
}

// ===============================
// Relationships
// ===============================

relationship ManyToOne {
    MstProduct{category} to MstCategory,
    MstProduct{brand} to MstBrand,
    Stock{product} to MstProduct,
    TrxOrderStock{supplier} to MstSupplier,
    TrxOrderItem{order} to TrxOrder,
    TrxOrderItem{product} to MstProduct,
    TrxCart{customer} to MstCustomer,
    MstLoyaltyProgram{customer} to MstCustomer
}

relationship OneToMany {
    MstSupplier{product} to MstProduct,
    MstCustomer{order} to TrxOrder,
    TrxOrder{delivery} to TrxDelivery,
    MstDepartment{employee} to MstEmployee
}

relationship ManyToOne {
    TrxDelivery{driver} to MstDriver,
    TrxNotification{customer} to MstCustomer
}

// Set pagination, DTO, and service options
paginate * with pagination
dto * with mapstruct
service all with serviceImpl

filter *
